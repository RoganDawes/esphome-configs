esphome:
  name: "geyser"
  friendly_name: "Geyser Thermostat"
  comment: "Sonoff THR320-based geyser thermostat"
  project:
    name: "rogan.thermostats"
    version: "1.0"
  on_boot:
    - priority: 90
      then:
      # make sure the geyser is in a known state at startup
      - switch.turn_off: main_relay
      # Default to running the geyser in Home mode
      - script.execute: geyser_on

packages:
  common: !include include/common.yaml
  sonoff: !include devices/sonoff_thr320.yaml

esp32:
  framework:
    type: esp-idf

bluetooth_proxy:

switch:
  - id: !extend main_relay
    internal: true

binary_sensor:
  # For someone in the ceiling, this can be used to turn the climate control
  # into OFF or HEAT modes. It does NOT directly control the relay.
  - id: !extend button0
    on_press:
      then:
        - if:
            condition:
              lambda: |-
                return id(geyser_climate).mode != CLIMATE_MODE_OFF;
            then:
              - logger.log: "Button deactivates climate control"
              - climate.control:
                  id: geyser_climate
                  mode: "OFF"
            else:
              - logger.log: "Button activates climate control"
              - climate.control:
                  id: geyser_climate
                  mode: "HEAT"

sensor:
  # Geyser temperature
  # Has some failsafes to disable climate control if the temperature
  # being reported is unreasonable. Below 10C suggests that the ATTiny85
  # is either not connected to the thermistor, or is otherwise reporting
  # incorrect values, and should be investigated.
  #
  # NOTE: This can be overridden, but care should be taken when doing so
  # because these only apply when the temperature ENTERS these ranges
  # If it REMAINS in the range, and climate is turned on manually, these
  # failsafes will not apply!
  - platform: dallas_temp
    address: 0x1e11223344550028
    update_interval: 10s
    id: temp
    name: "Temperature"
    filters:
      - sliding_window_moving_average:
          window_size: 6
          send_every: 6
    on_value_range:
      - below: 0.0
        then:
          - logger.log:
              format: "Temperature too low, disabling climate!"
              level: ERROR
          - climate.control:
              id: geyser_climate
              mode: "OFF"
          - switch.turn_off: main_relay
      - above: 75.0
        then:
          - logger.log:
              format: "Temperature too high, disabling climate!"
              level: ERROR
          - climate.control:
              id: geyser_climate
              mode: "OFF"
          - switch.turn_off: main_relay

  # The THR320 appears to run quite hot, let's just keep an eye on it
  - platform: internal_temperature
    name: "Internal Temperature"

climate:
  - platform: thermostat
    id: geyser_climate
    name: "Climate"
    sensor: temp
    visual:
      min_temperature: 40C
      max_temperature: 75C
      temperature_step:
        target_temperature: 1
        current_temperature: 1
    default_preset: Home
    preset:
      - name: Home
        default_target_temperature_low: 55C
        mode: heat
      - name: Boost
        default_target_temperature_low: 70C
        mode: heat
      - name: Eco
        default_target_temperature_low: 45C
        mode: heat
    min_heating_off_time: 0s
    min_heating_run_time: 60s
    min_idle_time: 30s
    heat_action:
      - switch.turn_on: main_relay
    idle_action:
      - switch.turn_off: main_relay
    heat_deadband: 2 # how many degrees can we go under the temp before starting to heat
    heat_overrun: 2 # how many degrees can we go over the temp before stopping
    off_mode:
      - switch.turn_off: main_relay
    on_state:
    - if:
        condition:
          lambda: |-
            return id(geyser_climate).mode == CLIMATE_MODE_OFF;
        then:
          - logger.log: "Climate control OFF"
          - light.turn_off: green_led
    - if:
        condition:
          lambda: |-
            return id(geyser_climate).mode == CLIMATE_MODE_HEAT;
        then:
          - logger.log: "Climate control ON"
          - light.turn_on: green_led

script:
  - id: geyser_on
    then:
      - delay: 60s
      - if:
          condition:
            not:
              api.connected:
          then:
            - climate.control:
                id: geyser_climate
                preset: "Home"
      - climate.control:
          id: geyser_climate
          mode: "HEAT"

